service: user-company
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-south-1
  environment:
    DB_USERNAME: ${ssm:/sls/user-company/db/username}
    DB_PASSWORD: ${ssm:/sls/user-company/db/password}
    DB_NAME: ${ssm:/sls/user-company/db/name}
    SECRET_KEY: ${ssm:/sls/user-company/encr-decr/secret-key}


plugins:
  - serverless-offline

functions:
  createUser:
    handler: controller/user.createUser
    events:
      - httpApi:
          path: user/create
          method: post
  getAllUsers:
    handler: controller/user.getAllUsers
    events:
      - httpApi:
          path: users
          method: post
  getUser:
    handler: controller/user.getUser
    events:
      - httpApi:
          path:  user/find/{user_id}
          method: get
  updateUser:
    handler: controller/user.updateUser
    events:
      - httpApi:
          path:  user/update/{email}
          method: patch
  deleteUser:
    handler: controller/user.deleteUser
    events:
      - httpApi:
          path:  user/delete/{user_id}
          method: delete
  createCompany:
    handler: controller/company.createCompany
    events:
      - httpApi:
          path: company/create
          method: post
  getAllCompany:
    handler: controller/company.getAllCompany
    events:
      - httpApi:
          path: company
          method: post
  getCompany:
    handler: controller/company.getCompany
    events:
      - httpApi:
          path:  company/find/{cmp_id}
          method: get
  updateCompany:
    handler: controller/company.updateCompany
    events:
      - httpApi:
          path:  company/update/{email}
          method: patch
  deleteCompany:
    handler: controller/company.deleteCompany
    events:
      - httpApi:
          path:  company/delete/{cmp_id}
          method: delete
  createTarget:
    handler: controller/target.createTarget
    events:
      - httpApi:
          path: target/create
          method: post
  getAllTargets:
    handler: controller/target.getAllTargets
    events:
      - httpApi:
          path: targets
          method: post
  # getTarget:
  #   handler: controller/target.getTarget
  #   events:
  #     - httpApi:
  #         path:  target/find/{target_id}
  #         method: get
  updateTarget:
    handler: controller/target.updateTarget
    events:
      - httpApi:
          path:  target/update/{target_id}
          method: patch
  deleteTarget:
    handler: controller/target.deleteTarget
    events:
      - httpApi:
          path:  target/delete/{target_id}
          method: delete









  # usersInCompany:
  #   handler: controller/company.usersInCompany
  #   events:
  #     - httpApi:
  #         path:  users_in_company/{cmp_id}
  #         method: get
  # companyOfUser:
  #   handler: controller/company.companyOfUser
  #   events:
  #     - httpApi:
  #         path:  company_of_user/{user_id}
  #         method: get